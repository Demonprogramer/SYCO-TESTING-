const axios = require("axios");

module.exports.config = {
    name: "spygame",
    version: "1.0.1",
    hasPermission: 0,
    credits: "MirryKal",
    description: "A fun spy game for group chats with 6 categories and 10 words each!",
    commandCategory: "games",
    usages: "+spygame @players",
    cooldowns: 5
};

const wordCategories = {
    "Fruits": ["Apple", "Banana", "Mango", "Pineapple", "Grapes", "Strawberry", "Watermelon", "Peach", "Guava", "Pomegranate"],
    "Animals": ["Lion", "Tiger", "Elephant", "Cheetah", "Leopard", "Kangaroo", "Giraffe", "Zebra", "Panda", "Wolf"],
    "Sports": ["Football", "Cricket", "Basketball", "Tennis", "Hockey", "Volleyball", "Badminton", "Golf", "Wrestling", "Boxing"],
    "Vehicles": ["Car", "Bike", "Train", "Aeroplane", "Bus", "Truck", "Scooter", "Ship", "Tractor", "Bicycle"],
    "Jobs": ["Doctor", "Engineer", "Teacher", "Scientist", "Police", "Lawyer", "Chef", "Pilot", "Actor", "Writer"],
    "Beverages": ["Tea", "Coffee", "Juice", "Milk", "Soda", "Wine", "Beer", "Coconut Water", "Smoothie", "Energy Drink"]
};

module.exports.run = async function ({ api, event, args }) {
    const { threadID, messageID, mentions } = event;

    if (Object.keys(mentions).length < 3 || Object.keys(mentions).length > 6) {
        return api.sendMessage("‚ö† ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ 3 ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 6 ‡§™‡•ç‡§≤‡•á‡§Ø‡§∞‡•ç‡§∏ ‡§Æ‡•á‡§Ç‡§∂‡§® ‡§ï‡§∞‡•á‡§Ç!", threadID, messageID);
    }

    const categories = Object.keys(wordCategories);
    const chosenCategory = categories[Math.floor(Math.random() * categories.length)];
    let words = [...wordCategories[chosenCategory]];

    let players = Object.keys(mentions);
    let spyIndex = Math.floor(Math.random() * players.length);
    let spy = players[spyIndex];
    let wordForSpy = words[Math.floor(Math.random() * words.length)];  
    let assignedWords = {};

    players.forEach((player, index) => {
        if (index === spyIndex) {
            assignedWords[player] = wordForSpy;  
        } else {
            assignedWords[player] = words[0];  
        }
    });

    for (let playerID in assignedWords) {
        api.sendMessage(`ü§´ ‡§Ü‡§™‡§ï‡§æ ‡§ó‡•Å‡§™‡•ç‡§§ ‡§∂‡§¨‡•ç‡§¶: *${assignedWords[playerID]}*`, playerID);
    }

    api.sendMessage(
        `üé≠ *Spy Game ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã ‡§ö‡•Å‡§ï‡§æ ‡§π‡•à!*\n\n**‡§∂‡•ç‡§∞‡•á‡§£‡•Ä:** ${chosenCategory}\nüì¢ ‡§π‡§∞ ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡•ã ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§∏‡•á ‡§∏‡§Æ‡§ù‡§æ‡§®‡§æ ‡§π‡•ã‡§ó‡§æ, ‡§≤‡•á‡§ï‡§ø‡§® ‡§∂‡§¨‡•ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§¨‡§§‡§æ‡§®‡§æ ‡§π‡•à!\n\nüîç *Bot ‡§Ö‡§¨ ‡§∞‡•à‡§Ç‡§°‡§Æ ‡§™‡•ç‡§≤‡•á‡§Ø‡§∞ ‡§ï‡•ã ‡§ö‡•Å‡§®‡•á‡§ó‡§æ ‡§î‡§∞ ‡§â‡§®‡§∏‡•á ‡§â‡§®‡§ï‡§æ ‡§∂‡§¨‡•ç‡§¶ ‡§∏‡§Æ‡§ù‡§æ‡§®‡•á ‡§ï‡•ã ‡§ï‡§π‡•á‡§ó‡§æ!*`,
        threadID
    );

    let playerTurn = 0;
    const playTurn = () => {
        if (playerTurn >= players.length) {
            return startVoting();
        }
        let player = players[playerTurn];
        playerTurn++;

        api.sendMessage(`üì¢ *${mentions[player].replace("@", "")}*, ‡§Ö‡§™‡§®‡•á ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡•ã **‡§è‡§ï ‡§µ‡§æ‡§ï‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ù‡§æ‡§ì**!`, threadID);
    };

    const startVoting = () => {
        api.sendMessage(`üîç **‡§Ö‡§¨ ‡§µ‡•ã‡§ü‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§ó‡•Ä!**\n\nüëâ ‡§ú‡§ø‡§∏ ‡§™‡•ç‡§≤‡•á‡§Ø‡§∞ ‡§ï‡•ã ‡§Ü‡§™ **Spy** ‡§∏‡§Æ‡§ù‡§§‡•á ‡§π‡•à‡§Ç, ‡§â‡§∏‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§™‡§∞ ‚ùå ‡§∞‡§ø‡§è‡§ï‡•ç‡§∂‡§® ‡§¶‡•á‡§Ç‡•§\n\n‚è≥ ‡§µ‡•ã‡§ü‡§ø‡§Ç‡§ó 30 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§ñ‡§º‡§§‡•ç‡§Æ ‡§π‡•ã‡§ó‡•Ä‡•§`, threadID);
        
        setTimeout(() => {
            api.getThreadInfo(threadID, (err, info) => {
                if (err) return api.sendMessage("‚ö† ‡§µ‡•ã‡§ü‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•Å‡§à!", threadID);

                let maxVotes = 0;
                let accused = "";
                for (let reaction of info.message_reactions) {
                    if (reaction.reaction === "‚ùå" && reaction.count > maxVotes) {
                        maxVotes = reaction.count;
                        accused = reaction.userID;
                    }
                }

                if (accused === spy) {
                    api.sendMessage(`‚úÖ **‡§¨‡§ß‡§æ‡§à ‡§π‡•ã!** ‡§Ü‡§™ ‡§∏‡§π‡•Ä ‡§•‡•á! **${mentions[spy]}** ‡§Ö‡§∏‡§≤‡•Ä Spy ‡§®‡§ø‡§ï‡§≤‡§æ!`, threadID);
                } else {
                    api.sendMessage(`‚ùå ‡§ó‡§≤‡§§ ‡§µ‡•ã‡§ü‡§ø‡§Ç‡§ó! ‡§Ö‡§∏‡§≤‡•Ä Spy **${mentions[spy]}** ‡§•‡§æ!`, threadID);
                }
            });
        }, 30000);
    };

    setTimeout(playTurn, 5000);
};
